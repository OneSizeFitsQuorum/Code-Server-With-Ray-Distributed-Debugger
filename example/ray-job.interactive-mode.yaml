apiVersion: ray.io/v1
kind: RayJob
metadata:
  name: rayjob-interactive-mode
spec:
  # InteractiveMode means KubeRay doesn't submit the job for you.
  # KubeRay will create the RayJob and transition it to the Waiting state.
  # The user needs to submit the job manually via the `ray job submit` command
  # and then update the `spec.jobId` field with the job ID.
  # After that, KubeRay will handle the rest of the lifecycle for the RayJob.
  submissionMode: InteractiveMode
  # User needs to update this field with the job ID after submitting the job
  jobId: ""
  rayClusterSpec:
    headGroupSpec:
      rayStartParams: {}
      template:
        spec:
          containers:
          - image: rayproject/ray:2.46.0
            name: ray-head
            ports:
            - containerPort: 6379
              name: gcs-server
            - containerPort: 8265
              name: dashboard
            - containerPort: 10001
              name: client
            resources:
              limits:
                cpu: "500m"
              requests:
                cpu: "200m"
            volumeMounts:
              - mountPath: /tmp/ray
                name: shared-ray-volume
          - name: vscode-debugger
            image: docker.io/onesizefitsquorum/code-server-with-ray-distributed-debugger:4.101.2
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 8443
            volumeMounts:
              - mountPath: /tmp/ray
                name: shared-ray-volume
            env:
              - name: PUID
                value: "1000"
              - name: PGID
                value: "1000"
              - name: TZ
                value: "Asia/Shanghai"
              - name: DEFAULT_WORKSPACE
                value: "/tmp/ray/session_latest/runtime_resources"
              - name: SUDO_PASSWORD
                value: "root"
          volumes:
            - name: shared-ray-volume  # Shared volume for /tmp/ray
              emptyDir: {} 
    workerGroupSpecs:
    - groupName: default-group
      replicas: 1
      minReplicas: 1
      maxReplicas: 1
      rayStartParams: {}
      template:
        spec:
          containers:
          - image: rayproject/ray:2.46.0
            name: ray-worker
            resources:
              limits:
                cpu: "500m"
              requests:
                cpu: "200m"